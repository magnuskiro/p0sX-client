eyJhbGciOiJIUzI1NiJ9.CnBpcGVsaW5lOgogICAgcGFjazoKICAgICAgICBpbWFnZTogbm9kZTpsYXRlc3QKICAgICAgICBwdWxsOiB0cnVlCiAgICAgICAgY29tbWFuZHM6CiAgICAgICAgICAgIC0gbnBtIGluc3RhbGwgLXEgLWcgZWxlY3Ryb24tZm9yZ2UKICAgICAgICAgICAgLSBucG0gaW5zdGFsbCAtcSAtZyBlbGVjdHJvbi1idWlsZGVyCiAgICAgICAgICAgIC0gbnBtIGluc3RhbGwgLXEKICAgICAgICAgICAgLSBucG0gcnVuIGxpbnQgLXEKICAgICAgICAgICAgLSBlbGVjdHJvbi1mb3JnZSBwYWNrYWdlCiAgICAgICAgd2hlbjoKICAgICAgICAgICAgZXZlbnQ6IFtwdXNoLCBwdWxsX3JlcXVlc3QsIGRlcGxveW1lbnRdCgogICAgcGFjazoKICAgICAgICBpbWFnZTogbm9kZTpsYXRlc3QKICAgICAgICBwdWxsOiB0cnVlCiAgICAgICAgY29tbWFuZHM6CiAgICAgICAgICAgIC0gbnBtIGluc3RhbGwgLXEgLWcgZWxlY3Ryb24tZm9yZ2UKICAgICAgICAgICAgLSBucG0gaW5zdGFsbCAtcSAtZyBlbGVjdHJvbi1idWlsZGVyCiAgICAgICAgICAgIC0gbnBtIGluc3RhbGwgLXEKICAgICAgICAgICAgLSBucG0gcnVuIGxpbnQgLXEKICAgICAgICAgICAgLSBucG0gcnVuIGRpc3Q6bGludXg2NAogICAgICAgIHdoZW46CiAgICAgICAgICAgIGV2ZW50OiB0YWcKCiAgICBub3RpZnk6CiAgICAgICAgaW1hZ2U6IHBsdWdpbnMvc2xhY2sKICAgICAgICBjaGFubmVsOiB0ZWtuaXNrLWRldgogICAgICAgIHVzZXJuYW1lOiBkcm9uZQogICAgICAgIGV2ZW50OiBbcHVzaCwgcHVsbF9yZXF1ZXN0LCBkZXBsb3ltZW50LCB0YWddCg.lZoERfFTkpoSWf3qUTr8DRQQchoD4C9zYG7cnV_MJ1Q